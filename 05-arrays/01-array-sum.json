{
    "title": "Array Sum",
    "description": "<h3><strong>Problem Description</strong></h3><p>Write a program to input <em>N</em> integers from user and print their sum.</p><h3><br></h3><h3><strong>Input Format</strong></h3><p>First line of input contains a single integer <em>N.</em></p><p>Second line of input contains <em>N</em> space separated integers.</p><p><br></p><h3><strong>Output Format</strong></h3><p>A single line of output containing sum of given elements.</p><p><br></p><h3><strong>Constraints</strong></h3><p><span class=\"ql-formula\" data-value=\"1 \\le N \\le 50\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>50</mn></mrow><annotation encoding=\"application/x-tex\">1 \\le N \\le 50</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.78041em; vertical-align: -0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.8193em; vertical-align: -0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.64444em; vertical-align: 0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span></span></span></span></span>﻿</span> </p><p><br></p><h3><strong>Example</strong></h3><pre class=\"ql-syntax\" spellcheck=\"false\">5\n82 59 30 21 37\n229﻿\n</pre><p><br></p>",
    "supported_languages": [
        "c",
        "cpp",
        "py",
        "java",
        "js"
    ],
    "test_cases": [
        {
            "input": "1\n78",
            "output": "78",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "2\n54 46",
            "output": "100",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "3\n21 88 73",
            "output": "182",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "4\n6 77 63 58",
            "output": "204",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "5\n82 59 30 21 37",
            "output": "229",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "6\n79 11 97 88 75 75",
            "output": "425",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "7\n21 29 37 73 85 50 3",
            "output": "298",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "8\n51 69 8 48 2 2 23 77",
            "output": "280",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "9\n65 38 100 10 52 50 90 24 44",
            "output": "473",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "10\n86 38 66 1 88 27 37 5 67 28",
            "output": "443",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "11\n52 10 15 60 59 45 59 61 90 46 37",
            "output": "534",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "12\n95 86 96 43 68 66 26 71 7 38 53 49",
            "output": "698",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "13\n37 54 24 55 74 30 48 63 6 30 15 48 3",
            "output": "487",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "14\n15 8 85 7 0 4 90 80 44 71 2 14 53 91",
            "output": "564",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "15\n66 44 6 47 3 90 4 20 58 78 40 57 21 93 53",
            "output": "680",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "16\n97 69 35 2 96 49 74 61 39 76 94 92 93 68 55 55",
            "output": "1055",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "17\n61 85 46 16 11 13 42 89 49 17 42 25 10 86 96 90 61",
            "output": "839",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "18\n28 17 16 53 64 57 21 40 41 37 74 97 60 79 49 36 73 55",
            "output": "897",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "19\n94 62 18 79 31 39 82 56 46 14 22 56 67 45 47 39 40 7 25",
            "output": "869",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "20\n8 3 22 44 51 25 22 87 29 99 7 41 55 11 15 1 18 82 2 64",
            "output": "686",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "21\n62 75 85 20 32 80 13 63 99 23 45 38 10 66 18 46 37 78 81 63 50",
            "output": "1084",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "22\n16 52 84 33 69 22 95 42 74 4 43 96 24 23 36 89 36 83 96 96 12 54",
            "output": "1179",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "23\n83 52 83 84 97 34 10 94 23 25 69 94 11 41 75 14 6 94 34 14 92 54 4",
            "output": "1187",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "24\n44 53 79 21 72 31 34 79 3 40 19 96 69 76 89 9 71 63 30 71 80 28 39 58",
            "output": "1254",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "25\n38 15 37 84 39 99 29 27 6 86 32 10 2 7 59 92 97 43 74 5 13 88 100 37 28",
            "output": "1147",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "26\n66 21 55 94 25 60 70 100 24 69 40 9 71 30 31 77 41 76 46 38 35 27 77 1 0 83",
            "output": "1266",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "27\n73 68 15 91 82 27 38 71 17 57 11 100 58 21 0 5 37 37 5 32 35 4 75 26 90 63 88",
            "output": "1226",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "28\n89 53 13 13 7 76 30 61 34 61 81 15 18 76 24 17 21 80 14 76 39 51 96 86 37 0 5 59",
            "output": "1232",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "29\n85 29 5 10 96 13 17 66 0 70 90 6 66 0 13 72 37 88 63 75 51 77 48 21 61 45 72 68 25",
            "output": "1369",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "30\n84 30 4 33 22 67 42 2 60 78 5 88 21 31 87 78 24 8 14 14 27 53 27 2 46 84 47 79 5 34",
            "output": "1196",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "31\n20 45 66 24 46 84 83 47 53 4 23 65 8 37 63 49 99 82 9 37 56 32 21 10 57 66 26 13 77 76 31",
            "output": "1409",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "32\n14 22 77 78 51 86 92 68 64 12 92 86 36 14 57 89 29 77 28 36 51 29 51 91 1 71 40 96 80 10 29 91",
            "output": "1748",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "33\n66 17 29 79 84 0 71 72 91 50 12 9 30 57 100 14 98 40 41 14 8 4 64 30 16 19 57 99 18 49 60 96 48",
            "output": "1542",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "34\n1 13 12 23 39 3 54 91 46 5 40 28 75 8 39 31 37 71 79 96 46 21 10 34 29 36 79 74 21 44 40 49 67 84",
            "output": "1425",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "35\n81 14 5 53 50 43 4 52 7 62 76 31 33 52 61 87 67 96 99 80 1 31 18 6 79 100 11 34 75 48 0 27 49 48 24",
            "output": "1604",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "36\n25 7 68 36 68 90 37 6 84 41 51 69 50 96 41 84 5 56 43 31 12 23 78 68 48 64 23 84 51 68 88 52 4 35 64 64",
            "output": "1814",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "37\n8 70 49 82 63 12 34 59 61 26 55 67 100 70 1 33 68 85 46 7 44 60 74 29 17 10 31 61 48 7 44 75 90 50 21 78 61",
            "output": "1796",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "38\n57 28 94 11 32 23 37 0 44 51 80 46 94 14 35 74 42 31 19 28 49 56 2 90 46 74 14 51 97 25 36 51 1 76 1 87 25 62",
            "output": "1683",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "39\n43 44 87 5 97 9 69 90 32 65 49 50 42 1 92 13 10 68 7 68 49 91 34 22 10 82 40 88 98 70 39 72 94 75 28 80 29 91 41",
            "output": "2074",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "40\n74 95 14 61 31 23 69 40 63 80 98 18 66 3 20 20 19 48 98 4 50 78 78 1 67 10 38 38 97 41 100 26 73 3 26 65 13 25 0 74",
            "output": "1847",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "41\n6 25 90 97 47 98 100 89 47 7 23 8 86 82 33 72 83 35 65 5 24 46 77 81 30 42 96 77 55 97 20 83 7 72 9 55 88 83 33 32 31",
            "output": "2236",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "42\n80 52 9 13 35 90 11 7 91 66 98 38 29 59 76 19 94 14 36 5 98 12 8 98 81 12 60 29 81 86 26 51 74 11 51 75 48 66 19 70 5 2",
            "output": "1985",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "43\n10 8 4 92 55 62 16 100 58 0 69 16 44 83 12 72 32 14 100 16 31 21 48 98 52 25 35 0 3 88 11 45 6 19 38 92 27 43 39 61 4 1 36",
            "output": "1686",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "44\n94 2 95 16 100 72 52 66 50 99 35 52 76 73 41 9 19 75 23 80 70 63 73 47 68 34 94 37 41 31 22 52 49 45 84 25 46 45 52 52 83 9 11 64",
            "output": "2326",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "45\n25 11 61 73 81 26 51 25 26 63 63 37 22 9 24 81 34 47 66 37 13 86 56 88 7 15 29 73 99 9 6 63 11 85 84 51 59 98 77 3 83 46 65 9 43",
            "output": "2120",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "46\n62 43 68 51 37 78 50 63 30 68 82 38 34 67 42 87 50 49 96 60 8 86 85 85 30 84 7 50 63 1 61 76 4 90 72 71 90 80 72 10 68 51 43 82 27 39",
            "output": "2590",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "47\n12 59 16 40 20 23 99 9 68 5 69 15 79 44 89 51 38 8 60 57 79 34 96 61 7 31 57 92 48 79 53 86 95 25 61 63 31 18 26 0 26 67 41 51 94 76 20",
            "output": "2278",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "48\n55 12 69 54 96 53 94 47 23 33 85 88 68 9 77 67 18 40 81 66 45 0 57 92 85 24 29 16 14 78 35 87 47 91 61 67 51 55 60 69 20 51 89 41 74 12 46 57",
            "output": "2588",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "49\n32 16 88 66 25 91 27 83 42 50 97 18 18 46 3 71 53 9 8 14 55 44 62 56 1 63 40 15 93 79 86 18 34 58 82 32 45 99 63 100 85 67 83 25 77 23 97 34 60",
            "output": "2533",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "50\n12 36 59 52 89 81 51 50 55 22 86 73 57 33 79 54 42 22 81 86 59 73 91 35 96 79 10 80 38 21 26 96 64 49 15 6 83 1 84 53 55 63 54 73 55 74 36 71 93 53",
            "output": "2806",
            "timeout": 1000,
            "score": 2,
            "locked": true
        }
    ],
    "templates": {
        "c": "#include <stdio.h>\nint main() {\n    // your code goes here\n    return 0;\n}",
        "cpp": "#include <iostream>\nusing namespace std;\nint main() {\n    // your code goes here\n    return 0;\n}",
        "py": "# your code goes here",
        "java": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        // your code goes here\n    }\n}",
        "js": "// your code goes here"
    }
}