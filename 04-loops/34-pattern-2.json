{
    "title": "Pattern 2",
    "description": "<h3><strong>Problem Description</strong></h3><p>Write a program to input a single integer <em>N</em> and print first <em>N</em> rows of the following pattern:</p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-strong\">****</span>*\n<span class=\"hljs-strong\">****</span>\n<span class=\"hljs-strong\">***\n**</span>\n<span class=\"hljs-bullet\">*</span>\n</pre><p><br></p><h3><strong>Input Format</strong></h3><p>A single line of input containing a single integer.</p><p><br></p><h3><strong>Output Format</strong></h3><p>First <em>N </em>rows of the given pattern.</p><p><em>No trailing whitespace is needed.</em></p><h3><br></h3><h3><strong>Constraints</strong></h3><p><span class=\"ql-formula\" data-value=\"0 \\le N \\le 20\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\"application/x-tex\">0 \\le N \\le 20</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.78041em; vertical-align: -0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.8193em; vertical-align: -0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.64444em; vertical-align: 0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span></span></span></span></span>﻿</span> </p><p><br></p><h3><strong>Example 1</strong></h3><pre class=\"ql-syntax\" spellcheck=\"false\">5\n<span class=\"hljs-strong\">****</span>*\n<span class=\"hljs-strong\">****</span>\n<span class=\"hljs-strong\">***\n**</span>\n<span class=\"hljs-bullet\">*</span>\n\n</pre>",
    "supported_languages": [
        "c",
        "cpp",
        "py",
        "java",
        "js"
    ],
    "test_cases": [
        {
            "input": "1",
            "output": "*\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "2",
            "output": "**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "3",
            "output": "***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "4",
            "output": "****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "5",
            "output": "*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "6",
            "output": "******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "7",
            "output": "*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "8",
            "output": "********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "9",
            "output": "*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "10",
            "output": "**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "11",
            "output": "***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "12",
            "output": "************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "13",
            "output": "*************\n************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "14",
            "output": "**************\n*************\n************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "15",
            "output": "***************\n**************\n*************\n************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "16",
            "output": "****************\n***************\n**************\n*************\n************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "17",
            "output": "*****************\n****************\n***************\n**************\n*************\n************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "18",
            "output": "******************\n*****************\n****************\n***************\n**************\n*************\n************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "19",
            "output": "*******************\n******************\n*****************\n****************\n***************\n**************\n*************\n************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "20",
            "output": "********************\n*******************\n******************\n*****************\n****************\n***************\n**************\n*************\n************\n***********\n**********\n*********\n********\n*******\n******\n*****\n****\n***\n**\n*\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "0",
            "output": "",
            "timeout": 1000,
            "score": 2,
            "locked": true
        }
    ],
    "templates": {
        "c": "#include <stdio.h>\nint main() {\n    // your code goes here\n    return 0;\n}",
        "cpp": "#include <iostream>\nusing namespace std;\nint main() {\n    // your code goes here\n    return 0;\n}",
        "py": "# your code goes here",
        "java": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        // your code goes here\n    }\n}",
        "js": "// your code goes here"
    }
}