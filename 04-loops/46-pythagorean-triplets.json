{
    "title": "Pythagorean Triplets",
    "description": "<h3><strong>Problem Description</strong></h3><p>Write a program to input an integer <em>N</em> from user and print all pythagorean triplets with numbers from 1 to <em>N</em>.</p><p><br></p><h3><strong>Input Format</strong></h3><p>A single line of input containing a single integer <em>N</em>.</p><p><br></p><p><strong>Output Format</strong></p><p>Refer to the example below.</p><p>Duplicates are not allowed.</p><p><br></p><h3><strong>Constraints</strong></h3><p><span class=\"ql-formula\" data-value=\"10 \\le N \\le 50\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>50</mn></mrow><annotation encoding=\"application/x-tex\">10 \\le N \\le 50</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.78041em; vertical-align: -0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.8193em; vertical-align: -0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.64444em; vertical-align: 0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span></span></span></span></span>﻿</span> </p><p><br></p><h3><strong>Example</strong></h3><pre class=\"ql-syntax\" spellcheck=\"false\">10\n3 4 5\n6 8 10\n</pre><p>With numbers in range [1, 10] we can form only two pythagorean triplets: </p><p><span class=\"ql-formula\" data-value=\"3^2 + 4^2 = 5^2\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><msup><mn>4</mn><mn>2</mn></msup><mo>=</mo><msup><mn>5</mn><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">3^2 + 4^2 = 5^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.897438em; vertical-align: -0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.814108em; vertical-align: 0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.814108em; vertical-align: 0em;\"></span><span class=\"mord\"><span class=\"mord\">5</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>﻿</span> </p><p><span class=\"ql-formula\" data-value=\"6^2 + 8^2 = 10^2\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>6</mn><mn>2</mn></msup><mo>+</mo><msup><mn>8</mn><mn>2</mn></msup><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">6^2 + 8^2 = 10^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.897438em; vertical-align: -0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.814108em; vertical-align: 0em;\"></span><span class=\"mord\"><span class=\"mord\">8</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.814108em; vertical-align: 0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>﻿</span> </p>",
    "supported_languages": [
        "c",
        "cpp",
        "py",
        "java",
        "js"
    ],
    "test_cases": [
        {
            "input": "10",
            "output": "3 4 5\n6 8 10\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "11",
            "output": "3 4 5\n6 8 10\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "12",
            "output": "3 4 5\n6 8 10\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "13",
            "output": "3 4 5\n5 12 13\n6 8 10\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "14",
            "output": "3 4 5\n5 12 13\n6 8 10\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "15",
            "output": "3 4 5\n5 12 13\n6 8 10\n9 12 15\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "16",
            "output": "3 4 5\n5 12 13\n6 8 10\n9 12 15\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "17",
            "output": "3 4 5\n5 12 13\n6 8 10\n8 15 17\n9 12 15\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "18",
            "output": "3 4 5\n5 12 13\n6 8 10\n8 15 17\n9 12 15\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "19",
            "output": "3 4 5\n5 12 13\n6 8 10\n8 15 17\n9 12 15\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "20",
            "output": "3 4 5\n5 12 13\n6 8 10\n8 15 17\n9 12 15\n12 16 20\n",
            "timeout": 1000,
            "score": 2,
            "locked": false
        },
        {
            "input": "21",
            "output": "3 4 5\n5 12 13\n6 8 10\n8 15 17\n9 12 15\n12 16 20\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "22",
            "output": "3 4 5\n5 12 13\n6 8 10\n8 15 17\n9 12 15\n12 16 20\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "23",
            "output": "3 4 5\n5 12 13\n6 8 10\n8 15 17\n9 12 15\n12 16 20\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "24",
            "output": "3 4 5\n5 12 13\n6 8 10\n8 15 17\n9 12 15\n12 16 20\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "25",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n12 16 20\n15 20 25\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "26",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "27",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "28",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "29",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n20 21 29\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "30",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n18 24 30\n20 21 29\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "31",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n18 24 30\n20 21 29\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "32",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n18 24 30\n20 21 29\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "33",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n18 24 30\n20 21 29\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "34",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n16 30 34\n18 24 30\n20 21 29\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "35",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n16 30 34\n18 24 30\n20 21 29\n21 28 35\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "36",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n15 20 25\n16 30 34\n18 24 30\n20 21 29\n21 28 35\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "37",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n12 35 37\n15 20 25\n16 30 34\n18 24 30\n20 21 29\n21 28 35\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "38",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n12 35 37\n15 20 25\n16 30 34\n18 24 30\n20 21 29\n21 28 35\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "39",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n12 35 37\n15 20 25\n15 36 39\n16 30 34\n18 24 30\n20 21 29\n21 28 35\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        },
        {
            "input": "40",
            "output": "3 4 5\n5 12 13\n6 8 10\n7 24 25\n8 15 17\n9 12 15\n10 24 26\n12 16 20\n12 35 37\n15 20 25\n15 36 39\n16 30 34\n18 24 30\n20 21 29\n21 28 35\n24 32 40\n",
            "timeout": 1000,
            "score": 2,
            "locked": true
        }
    ],
    "templates": {
        "c": "#include <stdio.h>\nint main() {\n    // your code goes here\n    return 0;\n}",
        "cpp": "#include <iostream>\nusing namespace std;\nint main() {\n    // your code goes here\n    return 0;\n}",
        "py": "# your code goes here",
        "java": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        // your code goes here\n    }\n}",
        "js": "// your code goes here"
    }
}