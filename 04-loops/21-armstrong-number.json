{
    "title": "Armstrong Number",
    "description": "<h3><strong>Problem Description</strong></h3><p>Write a program to input an integer <em>N</em> from the user and print TRUE if the number is armstrong; otherwise print FALSE.</p><p>A number is armstrong number if sum of digits raised to the power number of digits is equals to the original number.</p><p>For example 153 is an armstrong number because <span class=\"ql-formula\" data-value=\"1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>1</mn><mn>3</mn></msup><mo>+</mo><msup><mn>5</mn><mn>3</mn></msup><mo>+</mo><msup><mn>3</mn><mn>3</mn></msup><mo>=</mo><mn>1</mn><mo>+</mo><mn>125</mn><mo>+</mo><mn>27</mn><mo>=</mo><mn>153</mn></mrow><annotation encoding=\"application/x-tex\">1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.897438em; vertical-align: -0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.897438em; vertical-align: -0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">5</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.814108em; vertical-align: 0em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.72777em; vertical-align: -0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.72777em; vertical-align: -0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.64444em; vertical-align: 0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">7</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.64444em; vertical-align: 0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">5</span><span class=\"mord\">3</span></span></span></span></span>﻿</span> </p><p>Again 1634 is an armstrong number because <span class=\"ql-formula\" data-value=\"1^4 + 6^4 + 3^4 + 4^4 = 1634\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>1</mn><mn>4</mn></msup><mo>+</mo><msup><mn>6</mn><mn>4</mn></msup><mo>+</mo><msup><mn>3</mn><mn>4</mn></msup><mo>+</mo><msup><mn>4</mn><mn>4</mn></msup><mo>=</mo><mn>1634</mn></mrow><annotation encoding=\"application/x-tex\">1^4 + 6^4 + 3^4 + 4^4 = 1634</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.897438em; vertical-align: -0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.897438em; vertical-align: -0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.897438em; vertical-align: -0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.814108em; vertical-align: 0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.64444em; vertical-align: 0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord\">3</span><span class=\"mord\">4</span></span></span></span></span>﻿</span> </p><p><br></p><h3><strong>Input Format</strong></h3><p>A single line of input containing a single integer <em>N</em></p><h3><br></h3><h3><strong>Output Format</strong></h3><p>A single line of output containing TRUE or FALSE</p><p><br></p><h3><strong>Constraints</strong></h3><p><span class=\"ql-formula\" data-value=\"0 \\le N \\le 10^5\">﻿<span contenteditable=\"false\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">0 \\le N \\le 10^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.78041em; vertical-align: -0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.8193em; vertical-align: -0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right: 0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.814108em; vertical-align: 0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.814108em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span></span>﻿</span></p><p><br></p><p><br></p><h3><strong>Example 1</strong></h3><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-number\">153</span>\n<span class=\"hljs-literal\">TRUE</span>\n</pre><h3><br></h3><h3><strong>Example 2</strong></h3><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-number\">123</span>\n<span class=\"hljs-literal\">FALSE</span>\n</pre>",
    "supported_languages": [
        "c",
        "cpp",
        "py",
        "java",
        "js"
    ],
    "test_cases": [
        {
            "input": "153",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "370",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "371",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "1634",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "53551",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "84233",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "68919",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "99498",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "13025",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "50322",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": false
        },
        {
            "input": "37983",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "62186",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "26121",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "83117",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "72874",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "21344",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "93723",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "10079",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "30894",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "80602",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "17068",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "19246",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "36347",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "90582",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "86023",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "64488",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "60283",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "40074",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "49453",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "18379",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "2145",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "99301",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "36789",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "40466",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "63710",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "32242",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "20738",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "35370",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "55109",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "10887",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "72862",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "71126",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "57703",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "19196",
            "output": "FALSE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "1",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "2",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "3",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "4",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "5",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "6",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "7",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "8",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "9",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "407",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "8208",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "9474",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "54748",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "92727",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "93084",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "548834",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "1741725",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "4210818",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "9800817",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "9926315",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "24678050",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "24678051",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "88593477",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "146511208",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "472335975",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "534494836",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        },
        {
            "input": "912985153",
            "output": "TRUE",
            "score": 2,
            "timeout": 1000,
            "locked": true
        }
    ],
    "templates": {
        "c": "#include <stdio.h>\nint main() {\n    // your code goes here\n    return 0;\n}",
        "cpp": "#include <iostream>\nusing namespace std;\nint main() {\n    // your code goes here\n    return 0;\n}",
        "py": "# your code goes here",
        "java": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        // your code goes here\n    }\n}",
        "js": "// your code goes here"
    }
}